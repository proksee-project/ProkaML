'''
Copyright:

University of Manitoba & National Microbiology Laboratory, Canada, 2021

Written by: Arnab Saha Mandal

Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this work except in compliance with the License. You may obtain a copy of the
License at:

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
'''

import os
import glob
from os import environ

configfile: "config.yaml"
integrated_metadata_file = 'well_represented_species_metadata.txt'

rule target:
    input:
        integrated_metadata_file


rule get_assembly_UIDs:
    conda: 
        "dependencies.yaml"
    output:
        directory("entrez_id_list")
    shell:
        "python get_assembly_UIDs.py {config[email]} {config[api_key]}"


rule obtain_entrez_metadata:
    conda: 
        "dependencies.yaml"
    input:
        "entrez_id_list/Assembly_UID_chunk{i}.txt"
    output:
        "entrez_species_metadata/Assembly_UID_chunk{i}_metadata.txt"
    shell:
        "python get_entrez_metadata.py {config[email]} {config[api_key]} {input}"


checkpoint organize_species_metadata:
    conda:
        "dependencies.yaml"
    input:
        directory("entrez_species_metadata")
    output:
        directory("species_reorganized_metadata")
    shell:
        "python get_species_counts.py {config[email]} {config[api_key]}"


rule append_additional_attributes:
    conda:
        "dependencies.yaml"
    input:
        "species_reorganized_metadata/{i}_metadata.txt"
    output:
        "additional_species_metadata/{i}_metadata_added_attributes.txt"
    shell:
        "python append_additional_attributes.py {config[email]} {config[api_key]} {input}"


def aggregate_input(wildcards):
    checkpoint_output = checkpoints.organize_species_metadata.get(**wildcards).output[0]
    return expand("additional_species_metadata/{i}_metadata_added_attributes.txt", i=glob_wildcards(os.path.join(checkpoint_output, "{i}_metadata.txt")).i)


rule aggregate:
    input:
        aggregate_input
    output:
        integrated_metadata_file
    shell:
        "python concatenate_metadata.py"

